<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KISS on IMI Showtime</title><link>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/</link><description>Recent content in KISS on IMI Showtime</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><atom:link href="https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/index.xml" rel="self" type="application/rss+xml"/><item><title>Features</title><link>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/features/</guid><description>Feature set Offline Data Our app is completely offline compatible We have over 30.000 ingredients stored in our data set. It was important for us to guarantee that the user is always able to use the app. Therefore we didn&amp;rsquo;t want to rely on an internet connection.
Text Recognition/Filtering Our app uses the Firebase ML text recognition to recognise the ingredients on the back of the product.</description></item><item><title>Process</title><link>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/process/</guid><description>The development process Jujubes liquorice marshmallow candy sugar plum tiramisu. Wafer icing danish donut. Bonbon macaroon pastry brownie tiramisu gingerbread tart. Tiramisu jelly-o chocolate lemon drops pie sweet roll donut marzipan. Cotton candy brownie macaroon marshmallow candy. Bonbon croissant liquorice cookie. Marzipan apple pie candy croissant. Candy canes bear claw chocolate marzipan topping. Marshmallow topping sugar plum. Sweet roll pudding bear claw. Biscuit apple pie chocolate bar jelly candy canes liquorice.</description></item><item><title>Tech Stack</title><link>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/tech-stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/tech-stack/</guid><description>Our tech stack Tech Stack Flutter™️ The first step of the journey to our finished app was choosing a framework that meets our requirements. We had very little experience with app development, so it was necessary to do some self-reliant research first and we ended up with two candidates: React Native and Flutter and we decided on the latter. The framework Flutter gained a lot of popularity among App-Developers in recent years.</description></item><item><title>Future</title><link>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/future/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/bachelor/b1-kiss/future/</guid><description>So, what&amp;#39;s next? While things like improving the text recognition or speeding up the scanning are ongoing processes, we still have some ideas for new features that will improve the app. One thing that is on our bucket list, is to contact the European Commission because they have shown interest in projects that use their data. The European Commission has other datasets that are related to the CosIng dataset that we use, so we want to expand our dataset and implement relations between these datasets.</description></item></channel></rss>