<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deep 3D Pathfinding on IMI Showtime</title><link>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/</link><description>Recent content in Deep 3D Pathfinding on IMI Showtime</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><atom:link href="https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/index.xml" rel="self" type="application/rss+xml"/><item><title>Features</title><link>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/features/</guid><description>Our models are still being trained. Please revisit us later to view our results.
World Generator To produce a variety of pathfinding situations we created a world generator that can output voxel worlds of any desired size. There are 5 different presets for the Perlin noise based terrain generation. These produce different challenges for the learning process. Noise Canyon Maze Hills Small hills The generator can mass-produce worlds with multiple start and end points and either fixed or random preset types.</description></item><item><title>Process</title><link>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/process/</guid><description>Research Due to the lack of machine learning experience we started our project by researching how machine learning works, what different kinds of concepts exist and which of them are relevant for our path finding problem. Our project supervisors provided us with some useful starting points for this.
The main sources we built upon are GAN Path Finder, Pathfinding via Reinforcement and Imitation Multi-Agent Learning and Hands-on machine learning with Scikit-Learn, Keras, and TensorFlow</description></item><item><title>Tech Stack</title><link>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/tech-stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/tech-stack/</guid><description>.nomargin figure{ margin: 0; } Core Technology All machine learning related aspects of our project are built upon Python envionments that were managed with Conda. The reinforcement learning approach uses the TF-Agents library, which is as part of the Tensorflow framework. Our generative adversarial network was created with PyTorch. The machine learning process was accelerated using Nvidia's CUDA toolkit. The training data generation and result visualization was achieved in Unity with C#.</description></item><item><title>Future</title><link>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/future/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htw-imi-showtime.github.io/ws20/master/m3-deep-3d-pathfinding/future/</guid><description>What is next? The timespan for this project was only sufficient to train the models for a proof of concept stage. With more time and hyperparameter adjustments the quality of the path predictions could be improved. More Concepts As part of our project we also came up with more concepts which have not yet been implemented.
The first is “step by step walking from both directions”.</description></item></channel></rss>